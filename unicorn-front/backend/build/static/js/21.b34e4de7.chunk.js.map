{"version":3,"sources":["components/Profile.js","pages/ProfilePage.js"],"names":["ProfilePage","storage","firebase","useState","open","setOpen","uploadProgress","setUploadProgress","isLoading","setisLoading","profileDetails","setProfileDetails","profileImageUrl","setProfileImageUrl","useStateValue","state","user","uid","Cookies","get","userId","id","profileUpdated","setProfileUpdated","firstname","setFirstName","lastname","setLastName","address","setAddress","handleImageUpload","image","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","alert","child","getDownloadURL","then","url","fetch","method","headers","body","JSON","stringify","response","ok","json","result","catch","genericError","handleClose","UpdateProfileInfo","bearer_token","status","updateProfileInfoWithRetry","a","refreshEnabled","refreshTheToken","tokens","set","accessToken","refreshToken","fetchUserInfo","getUserPhoto","FetchProfileInfoAndPicture","length","profile","first_name","last_name","phone_number","email","firstName","lastName","location","profilePictureResult","image_url","useEffect","className","src","alt","type","accept","onChange","event","target","files","htmlFor","CircularProgress","variant","value","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","required","autoFocus","margin","label","fullWidth","DialogActions","style","color","phoneNumber","Loader","props","HeaderWrapped","Footer"],"mappings":"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","file":"static/js/21.b34e4de7.chunk.js","sourcesContent":["import { blue, red } from '@mui/material/colors'\nimport React, { useState, useEffect } from 'react'\nimport '../css/Profile.css'\nimport { useStateValue } from '../StateProvider'\nimport Cookies, { set } from 'js-cookie'\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/storage'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, CircularProgress } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Loader from './Loader'\nimport { refreshTheToken } from \"./logic/logic\";\nfunction ProfilePage() {\n  const storage = firebase.storage();\n  const [open, setOpen] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isLoading, setisLoading] = useState(false);\n  const [profileDetails, setProfileDetails] = useState({});\n  const [profileImage, setProfileImage] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState(null);\n  const [state, dispatch] = useStateValue();\n  const [userId, setUserId] = useState(state.user?.uid || Cookies.get(\"uid\") || null);\n  const [id, setId] = useState(state.user?.id || Cookies.get(\"id\") || null);\n  const [profileUpdated, setProfileUpdated] = useState(null);\n  const [firstname, setFirstName] = useState(null);\n  const [lastname, setLastName] = useState(null);\n  const [address, setAddress] = useState(null);\n\n  const handleProfilePictureChange = (event) => {\n    // Mark: Validate file is image?  set the image \n    if (event.target.files[0]) {\n      //setProfileImage(event.target.files[0])\n      handleImageUpload(event.target.files[0])\n    }\n  }\n  const handleImageUpload = (image) => {\n    const updateTask = storage.ref(`images/${image.name}`).put(image)\n    //setisLoading(true)\n    updateTask.on(\n      \"state_changed\",\n      snapshot => { \n         const progress = Math.round((snapshot.bytesTransferred/snapshot.totalBytes)*100)\n         setUploadProgress(progress)\n      },\n      error => {\n        console.log(error)\n        alert(\"opps someting went wrong when uploading image\")\n        setisLoading(false)\n      },\n      () => {\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          // update the backend db with the profile image url\n          fetch('http://localhost:8080/users/addProfilePicture', {\n            method: \"POST\",\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"image_url\": url,\n              \"image_id\": profileDetails.id\n             \n            })\n          }).then((response) => {\n            if (!response.ok) {\n              // throw the promise to catch and\n              // display message from backend API\n              throw response\n            }\n            else\n              return response.json()\n          }).then((result) => {\n              // Successfully added pro pic \n              setProfileImageUrl(url)\n              setUploadProgress(0)\n              setisLoading(false)\n            }).catch((error) => {\n              setisLoading(false)\n              // error can come from rejected Promise fetch api error or from backend API\n              // console.log(error.status) \n              alert(\"Sorry, Some server error happended while adding the  profile picture!\")\n              // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n              if (typeof error.json === \"function\") {\n                error.json().then(error => {\n                  //console.log(\"An API error from backend API while adding user profile picture for  user in for userid XXX\");\n                }).catch(genericError => {\n                  //console.log(\"Another error \");\n                });\n              }\n              else{\n                // error status undefined here\n                //console.log(\"some sort of fetch error happended\")\n              }\n  \n            })\n\n\n        })\n      }\n    )\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const UpdateProfileInfo = ()=>{\n    let bearer_token = Cookies.get('accessToken')\n       if (!bearer_token){\n          alert(\" we couldnt get your stored sessionin  data . Please try logging in again\")\n       } \n    return fetch('http://localhost:8080/users/updateProfile', {\n      method: \"PUT\",\n      headers: {\n        'Content-type': 'application/json',\n        \"Authorization\":  'Bearer ' + bearer_token\n      },\n      body: JSON.stringify({\n        \"address\": address,\n        \"uid\": userId,\n        \"first_name\": firstname,\n        \"last_name\": lastname\n      })\n    }).then((response) => {\n      if (response.status == 403) {\n        // throw the promise to catch and\n        // display message from backend API\n        return \"Token expired error\"\n      }\n      if (!response.ok) {\n        // throw the promise to catch and\n        // display message from backend API\n        throw response\n      }\n      else\n        return response.json()\n    })\n  }\n  const updateProfileInfoWithRetry = async (refreshEnabled=true)=>{\n    setisLoading(true)\n      try{\n          let result = await UpdateProfileInfo()\n          if (result==\"Token expired error\" && refreshEnabled){\n            let tokens = await refreshTheToken()\n            if (!tokens){\n              console.log(\"We couldnt get new tokens and refresh token for you. Sorry\")\n              return\n              //alert(\"We couldnt get new tokens and refresh token for you. Sorry\")\n            }\n            Cookies.set('accessToken', tokens.accessToken)\n            Cookies.set('refreshToken', tokens.refreshToken)\n            updateProfileInfoWithRetry(false)\n          }\n          else if (result!==\"Token expired error\"){\n              setProfileUpdated(result)\n              setisLoading(false)\n          }\n          \n      } catch(error){\n        setisLoading(false)\n        // error can come from rejected Promise fetch api error or from backend API\n        // console.log(error.status) \n        alert(\"Sorry, Some server error happended while updating profile details!\")\n        // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n        if (typeof error.json === \"function\") {\n          error.json().then(error => {\n            //console.log(\"An API error from backend API while updating profile for userid XXX\");\n          }).catch(genericError => {\n            //console.log(\"Another error \");\n          });\n        }\n        else{\n          console.log(error)\n          // error status undefined here\n          //console.log(\"some sort of fetch error happended\")\n        }\n      }\n      setOpen(false);\n    };\n\n  const fetchUserInfo = ()=>{\n      let bearer_token = Cookies.get('accessToken')\n       if (!bearer_token){\n          alert(\" we couldnt get your stored sessionin  data . Please try logging in again \")\n       } \n      return fetch('http://localhost:8080/users/getProfile/' + userId, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\":  'Bearer ' + bearer_token\n        },\n        \n\n      }).then((response) => {\n        if (response.status == 403) {\n          // throw the promise to catch and\n          // display message from backend API\n          return \"Token expired error\"\n        }\n        if (!response.ok) {\n          // throw the promise to catch and\n          // display message from backend API\n          throw response\n        }\n        else\n          return response.json()\n      })\n  }\n  const getUserPhoto = (id)=>{\n    let bearer_token = Cookies.get('accessToken')\n       if (!bearer_token){\n          alert(\" we could get your stored sessionin  data . Please try logging in again \")\n      } \n      return fetch('http://localhost:8080/users/getProfilePicture/' + id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\":  'Bearer ' + bearer_token\n        },\n        //phone number has to be inserted properly as well on sign up\n\n      }).then((response) => {\n        if (!response.ok) {\n          // throw the promise to catch and\n          // display message from backend API\n          throw response\n        }\n        else\n          return response.json()\n      })\n  }\n  const FetchProfileInfoAndPicture = async (refreshEnabled=true)=>{\n    console.log(refreshEnabled)\n      try{\n        //setisLoading(true)\n        let result = await fetchUserInfo()\n        if (result==\"Token expired error\" && refreshEnabled){\n          let tokens = await refreshTheToken()\n          console.log(\"here are te tokens\", tokens)\n          if (!tokens){\n            console.log(\"We couldnt get new tokens and refresh token for you. Sorry\")\n            return\n            //alert(\"We couldnt get new tokens and refresh token for you. Sorry\")\n          }\n          Cookies.set('accessToken', tokens.accessToken)\n          Cookies.set('refreshToken', tokens.refreshToken)\n          FetchProfileInfoAndPicture(false)\n        }\n        else if (result.length > 0 && result[0].id) {\n          const profile =\n          {\n            \"id\": result[0].id,\n            \"firstName\": result[0].first_name,\n            \"lastName\": result[0].last_name,\n            \"phoneNumber\": result[0].phone_number,\n            \"email\": result[0].email,\n            \"location\": result[0].address\n          }\n          setisLoading(false)\n          setProfileDetails(profile)\n          setFirstName(profile.firstName)\n          setLastName(profile.lastName)\n          setAddress(profile.location)\n          let profilePictureResult = await getUserPhoto(result[0].id)\n          if (profilePictureResult.length > 0) {\n            setProfileImageUrl(profilePictureResult[0].image_url)\n          }\n        }\n        \n        \n      }catch(error){\n        setisLoading(false)\n        // error can come from rejected Promise fetch api error or from backend API\n        // console.log(error.status) \n        //alert(\"Sorry, Some server error happended while fetching profile details or profile picture!\")\n        // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n        if (typeof error.json === \"function\") {\n          error.json().then(error => {\n            //console.log(\"An API error from backend API while fetching user in for userid XXX\");\n          }).catch(genericError => {\n            //console.log(\"Another error \");\n          });\n        }\n        else{\n          // error status undefined here\n          //console.log(\"some sort of fetch error happended\")\n        }\n      }\n      \n  }\n  \n  // run  on the first render and as profile gets updated\n  useEffect(FetchProfileInfoAndPicture, [profileUpdated])\n\n  return (\n  <div>\n    <div className=\"profilePage__content\">\n      <div className=\"profilePage__imageSection\">\n        <div className=\"profilePage__imageSection__image\">\n          <img src={profileImageUrl || \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTuqf58ptYjurFfvxzCIylYa9tD6s_011kbKw&usqp=CAU\"} alt=\"\" />\n          <input type=\"file\" name=\"Upload Image\" accept=\"image/*\" id=\"imageInput\" onChange={handleProfilePictureChange} />\n          <label htmlFor=\"imageInput\"> Change Profile Picture</label>\n          {uploadProgress <= 100 && uploadProgress>0?(\n            <div className=\"profilePage__imageSection__image__loader\">\n            <CircularProgress className=\"profilePage__imageSection__image__loader__icon\" variant=\"determinate\" value={uploadProgress} />\n            </div>\n        ):\"\"\n        }\n        </div>\n        \n        \n        <Button onClick={handleClickOpen}> Edit Profile </Button>\n\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>Edit Profile</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n\n            </DialogContentText>\n            <TextField\n              required\n              autoFocus\n              margin=\"dense\"\n              id=\"firstname\"\n              label=\"First Name\"\n              value={firstname}\n              onChange={(event) => setFirstName(event.target.value)}\n              fullWidth\n              variant=\"standard\"\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"lastname\"\n              label=\"Last Name\"\n              value={lastname}\n              onChange={(event) => setLastName(event.target.value)}\n              fullWidth\n              variant=\"standard\"\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"address\"\n              label=\"Address\"\n              value={address}\n              onChange={(event) => setAddress(event.target.value)}\n              fullWidth\n              variant=\"standard\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={updateProfileInfoWithRetry}>Save</Button>\n          </DialogActions>\n        </Dialog>\n\n      </div>\n      <div className=\"profilePage__content__info\">\n        <p> <b>Contact Information </b> </p>\n        <div className=\"profilePage__content__pairsOfInfo\">\n          <p> Full Name: </p>\n          <p style={{ color: \"blue\" }}> {profileDetails.firstName} {profileDetails.lastName} </p>\n        </div>\n        <div className=\"profilePage__content__pairsOfInfo\">\n          <p> Phone Number: </p>\n          <p style={{ color: \"blue\" }}> {profileDetails.phoneNumber} </p>\n        </div>\n        <div className=\"profilePage__content__pairsOfInfo\">\n          <p> EMail: </p>\n          <p style={{ color: \"blue\" }}> {profileDetails.email} </p>\n        </div>\n\n\n        <p> <b>General Information </b> </p>\n        \n        <div className=\"profilePage__content__pairsOfInfo\">\n          <p> Location: </p>\n          <p style={{ color: \"blue\" }}> {profileDetails.location} </p>\n        </div>\n\n      </div>\n    </div>\n    {isLoading?(\n          <Loader/>\n        ):\"\"\n    }\n    \n\n  </div>\n    \n\n  )\n}\n\nexport default ProfilePage\n","import \"../css/App.css\";\nimport React from \"react\";\nimport Profile from \"../components/Profile\";\nimport Footer from \"../components/Footer.js\";\nimport Cookies from \"js-cookie\";\nimport HeaderWrapped from \"./HeaderWrapped\";\n\nfunction ProfilePage(props) {\n  return (\n    <div>\n      <HeaderWrapped />\n      <Profile firstname={props.firstname} lastname={Cookies.get(\"lastname\")} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default ProfilePage;\n"],"sourceRoot":""}