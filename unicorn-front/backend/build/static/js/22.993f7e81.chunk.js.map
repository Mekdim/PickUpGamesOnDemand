{"version":3,"sources":["components/SignIn.js","pages/SignInPage.js"],"names":["SignIn","useState","loading","setLoading","forgotPassword","setForgotPassword","passwordResetEmail","setPasswordResetEmail","useStateValue","dispatch","history","useHistory","useEffect","unsubscribe","auth","onAuthStateChanged","a","user","getTokensOnLogin","uid","tokensResult","accessToken","Cookies","set","refreshToken","alert","getUserProfile","result","length","loggedUser","email","phonenumber","phone_number","firstname","first_name","lastname","last_name","id","type","actionTypes","SET_USER","fetchNotification","notifications","SET_USER_NOTIFICATIONS","userNotifications","console","error","push","signOut","json","then","catch","genericError","className","Paper","elevation","style","padding","height","margin","Grid","align","Avatar","backgroundColor","TextField","label","name","placeholder","fullWidth","required","variant","marginTop","marginBottom","onChange","event","target","value","Button","color","onClick","e","preventDefault","sendPasswordResetEmail","log","initialValues","password","onSubmit","values","signInWithEmailAndPassword","userCredential","props","as","Typography","Link","href","to","Loader","SignInPage","HeaderWrapped","Footer"],"mappings":"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","file":"static/js/22.993f7e81.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/SignIn.css\";\nimport { Button, Avatar, TextField, Link } from \"@mui/material\";\nimport { Grid, Paper, Typography } from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { actionTypes } from \"../reducer\";\nimport { useStateValue } from \"../StateProvider\";\nimport { useHistory, Link as NavLink } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { auth } from \"../Firebase\";\nimport Cookies from \"js-cookie\";\nimport Loader from \"./Loader\";\nimport { fetchNotification, getUserProfile, getTokensOnLogin } from \"./logic/logic\";\n\nfunction SignIn() {\n  const [loading, setLoading] = useState(false);\n  const [forgotPassword, setForgotPassword] = useState(false);\n  const [passwordResetEmail, setPasswordResetEmail] = useState(null);\n  const [state, dispatch] = useStateValue();\n  const history = useHistory();\n  const paperStyle = {\n    padding: \"20px\",\n    height: \"70vh\",\n    margin: \"10px auto \",\n  };\n  const sendPasswordResetEmail = () => {\n    if (!passwordResetEmail) {\n      alert(\"Make sure you enter your email address\");\n      return;\n    }\n    setLoading(true);\n    auth\n      .sendPasswordResetEmail(passwordResetEmail)\n      .then(() => {\n        setLoading(false);\n        alert(\"An email is sent with alink to reset your password!\");\n        console.log(\"password sent to email\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        alert(\n          \"sorry, there was an error sending reset email to the email provided!\"\n        );\n      });\n  };\n  const submit = (values) => {\n    setLoading(true);\n\n    auth\n      .signInWithEmailAndPassword(values.email, values.password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        setLoading(false);\n        // ...\n      })\n      .catch((error) => {\n        setLoading(false);\n        alert(\n          \"Sorry, something went wrong! The email or the password you provided is wrong!\"\n        );\n      });\n  };\n  // useEffect\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setLoading(true);\n        try {\n          let tokensResult = await getTokensOnLogin(user.uid)\n          if (tokensResult && tokensResult.accessToken){\n            Cookies.set(\"accessToken\", tokensResult.accessToken)\n            Cookies.set(\"refreshToken\", tokensResult.refreshToken)\n          }\n          else{\n            alert(\n              \"Sorry, Some server error happended while logging in. We couldnt grab tokens for you!\"\n            );\n            return\n          }\n          let result = await getUserProfile(user.uid);\n          if (result.length > 0) {\n            const loggedUser = {\n              email: user.email,\n              uid: user.uid,\n              phonenumber: result[0].phone_number,\n              firstname: result[0].first_name,\n              lastname: result[0].last_name,\n              id: result[0].id,\n            };\n            Cookies.set(\"firstname\", result[0].first_name);\n            Cookies.set(\"email\", user.email);\n            Cookies.set(\"uid\", user.uid);\n            Cookies.set(\"id\", result[0].id);\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: loggedUser,\n            });\n\n            try {\n              let notifications = await fetchNotification(loggedUser.id);\n              dispatch({\n                type: actionTypes.SET_USER_NOTIFICATIONS,\n                userNotifications: notifications,\n              });\n            } catch (notificationError) {\n              console.error(\"Unable to fetch notifications\");\n            }\n            history.push(\"/\");\n          }\n        } catch (error) {\n          setLoading(false);\n          auth.signOut();\n          alert(\n            \"Sorry, Some server error happended while logging in. Try again!\"\n          );\n          // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n          if (typeof error.json === \"function\") {\n            error\n              .json()\n              .then((error) => {})\n              .catch((genericError) => {});\n          }\n        }\n      }\n    });\n\n    // this is called when component is unmounted\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"signIn\">\n      <Paper elevation={10} style={paperStyle} className=\"signIn__paper\">\n        <Grid align=\"center\">\n          <Avatar style={{ backgroundColor: \"green\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          {!forgotPassword ? (\n            <>\n              <h2> Sign In </h2>\n            </>\n          ) : (\n            <h2> Reset your Password </h2>\n          )}\n        </Grid>\n        {forgotPassword ? (\n          <>\n            <TextField\n              label=\"Email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              fullWidth\n              required\n              variant=\"outlined\"\n              style={{\n                backgroundColor: \"#f7f7f7\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n              onChange={(event) => {\n                setPasswordResetEmail(event.target.value);\n              }}\n            />\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n              onClick={(e) => {\n                e.preventDefault();\n                setForgotPassword(false);\n              }}\n            >\n              Go Back\n            </Button>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n              onClick={sendPasswordResetEmail}\n            >\n              Submit\n            </Button>\n          </>\n        ) : (\n          <>\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              onSubmit={submit}\n            >\n              {(props) => (\n                <Form>\n                  <Field\n                    as={TextField}\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    fullWidth\n                    required\n                    variant=\"outlined\"\n                    style={{\n                      backgroundColor: \"#f7f7f7\",\n                      marginTop: \"10px\",\n                      marginBottom: \"10px\",\n                    }}\n                  />\n                  <Field\n                    as={TextField}\n                    label=\"Password\"\n                    name=\"password\"\n                    placeholder=\"Enter password\"\n                    type=\"password\"\n                    fullWidth\n                    required\n                    variant=\"standard\"\n                    style={{\n                      backgroundColor: \"#f7f7f7\",\n                      marginTop: \"10px\",\n                      marginBottom: \"10px\",\n                    }}\n                  />\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    fullWidth\n                    variant=\"contained\"\n                    style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n                  >\n                    Sign In\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n            <Typography>\n              <Link\n                href=\"#\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setForgotPassword(true);\n                }}\n              >\n                Forgot Password?\n              </Link>\n            </Typography>\n\n            <Typography>\n              Don't have an account?\n              <NavLink to=\"/signup\">\n                <Link href=\"#\"> Sign Up </Link>{\" \"}\n              </NavLink>\n            </Typography>\n          </>\n        )}\n      </Paper>\n      {loading ? <Loader /> : \"\"}\n    </div>\n  );\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport SignIn from \"../components/SignIn\";\nimport Footer from \"../components/Footer.js\";\nimport HeaderWrapped from \"./HeaderWrapped\";\n\nfunction SignInPage() {\n  return (\n    <div>\n      <HeaderWrapped />\n      <SignIn />\n      <Footer />\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"sourceRoot":""}