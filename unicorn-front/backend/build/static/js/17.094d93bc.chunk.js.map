{"version":3,"sources":["components/SignUp.js","pages/SignUpPage.js"],"names":["SignUp","useStateValue","history","useHistory","useState","phoneNumber","setPhoneNumber","phoneVerified","setPhoneVerified","firstName","setfirstName","lastName","setLastName","loading","setLoading","onPhoneSignInSubmit","phonenumber","console","log","window","recaptchaVerifier","firebase","auth","RecaptchaVerifier","response","appVerifier","signInWithPhoneNumber","then","confirmationResult","code","prompt","confirm","result","user","catch","error","alert","submit","values","props","email","createUserWithEmailAndPassword","password","_delegate","uid","firstname","lastname","useEffect","onAuthStateChanged","fetch","method","headers","body","JSON","stringify","ok","json","push","delete","genericError","className","elevation","style","padding","margin","align","backgroundColor","initialValues","onSubmit","as","TextField","label","name","placeholder","fullWidth","required","variant","marginTop","marginBottom","type","color","onClick","onChange","event","target","value","id","to","href","SignInPage"],"mappings":"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","file":"static/js/17.094d93bc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../css/SignUp.css'\nimport { Button, Avatar, TextField, Link } from '@mui/material';\nimport { Container, Grid, Paper, Typography } from \"@mui/material\";\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport { actionTypes } from '../reducer';\nimport { useStateValue } from '../StateProvider'\nimport { useHistory, Link as NavLink } from \"react-router-dom\";\nimport { Formik, Form, Field } from 'formik'\nimport { auth } from '../Firebase'\nimport Cookies from 'js-cookie'\nimport firebase from 'firebase/compat/app'\nimport Loader from './Loader'\nfunction SignUp() {\n  const [state, dispatch] = useStateValue();\n  const history = useHistory()\n  //  Firebase repatcha \n  const [phoneNumber, setPhoneNumber] = useState(null);\n  const [phoneVerified, setPhoneVerified] = useState(false);\n  const [firstName, setfirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n\n  const recaptchaVerifierSimple = () => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n      'size': 'invisible',\n      'callback': (response) => {\n        //reCAPTCHA solved, allow signInWithPhoneNumber.\n        //this.onSignInSubmit();\n      }\n    });\n\n\n  }\n  const onPhoneSignInSubmit = () => {\n    setLoading(true)\n    const phonenumber = phoneNumber\n    console.log(phonenumber)\n    recaptchaVerifierSimple()\n    const appVerifier = window.recaptchaVerifier;\n    firebase.auth().signInWithPhoneNumber(phonenumber, appVerifier)\n      .then((confirmationResult) => {\n        setLoading(false)\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        console.log(\"sms  sent\")\n        window.confirmationResult = confirmationResult;\n\n        const code = window.prompt(\"Enter verification code\")\n        confirmationResult.confirm(code).then((result) => {\n          // User signed in successfully.\n          const user = result.user;\n          setPhoneVerified(true)\n          console.log(\"user verified the code correctly!\")\n          // ...\n        }).catch((error) => {\n          alert(\"The code you entered was incorrect. Try again!\")\n        });\n\n        // ...\n      }).catch((error) => {\n        setLoading(false)\n        alert(\"There was some error processing your request!\")\n\n      });\n  }\n\n\n  const paperStyle = {\n    padding: \"20px\",\n    margin: \"10px auto \"\n    \n  }\n  const submit = (values, props) => {\n    // email or password has to be set before signing up\n    if (values.email == '') {\n      return\n    }\n    setLoading(true)\n    auth.createUserWithEmailAndPassword(values.email, values.password).then(\n      (result) => {\n        console.log(result.user._delegate.uid)\n        // set first name and lastname here so that user profile can be created on sign in observer\n        setfirstName(values.firstname)\n        setLastName(values.lastname)\n        setLoading(false)\n      },\n\n      (error) => {\n        setLoading(false)\n        if (error.code!=\"auth/admin-restricted-operation\"){\n          alert(error.code + \". sorry there was some error procesing your request. check your email and password!\")\n        }\n        console.log(error.code)\n        \n\n      }\n    )\n\n  }\n  // this should be on mount and not on every rerender - will depend on lastname and firstname being set as well\n  useEffect(() => {\n    // if the user is signed up using firebase but the backend hasnt been updated, the signup will be reverted\n    // we use the user object here to delete the signed up user (delete only works here after user is logged in)\n    // this observer is called every time user is logged in and out\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        // if email is nil it means the users hasnt still signed up using email and password. This observer got called on phone verification\n        if (user.email == null) {\n          return\n        }\n        // first name and lastname has to be set before calling the backend API\n        if (firstName == \"\" || lastName == \"\") {\n          return\n        }\n        setLoading(true)\n        fetch('http://localhost:8080/users/addProfile', {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          //phone number has to be inserted properly as well on sign up\n          body: JSON.stringify({\n            \"phone_number\": phoneNumber ? phoneNumber : \"\",\n            \"email\": user.email,\n            \"uid\": user.uid,\n            \"first_name\": firstName,\n            \"last_name\": lastName\n          })\n        }).then((response) => {\n          if (!response.ok) {\n            // throw the promise to catch and\n            // display message from backend API\n            throw response\n          }\n          else\n            return response.json()\n        }).then((result) => {\n          setLoading(false)\n          \n          \n          // go to sign in page to grab the accesstoken. User is still logged in on firebase so\n          // on login page the user object is already there\n          if (firstName != \"\") {\n            history.push(\"/signin\")\n          }\n\n        }).catch((error) => {\n          setLoading(false)\n          // error can come from rejected Promise fetch api error or from backend API\n          // console.log(error.status) \n          // delete user bacause profile could not be updated on the backend tho firebase signup worked\n          user.delete().then(function () {\n            console.log(\"userdeleted\")\n            // User deleted.\n          }).catch(function (error) {\n            // An error happened while trying to delete the user - send to logger\n          });\n          alert(\"Sorry,  Your information is not fully updated! some server error happened. Try again \")\n          // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n          if (typeof error.json === \"function\") {\n            error.json().then(error => {\n              //console.log(\"An API error from backend API while signing up for userid XXX\");\n            }).catch(genericError => {\n              //console.log(\"Another error \");\n            });\n          }\n          else {\n            // error status undefined here\n            //console.log(\"some sort of fetch error happended\")\n          }\n        })\n        return\n\n\n      } else {\n        // User is signed out and no action for now\n      }\n    })\n    // this is called when component is unmounted\n    return unsubscribe\n  }, [lastName])\n\n  return (\n    <div className=\"signUp\">\n      <Paper elevation={8} style={paperStyle} className=\"signUp__paper\">\n        <Grid align=\"center\" >\n          <Avatar style={{ backgroundColor: \"green\" }}> <LockOutlinedIcon /> </Avatar>\n          <h2> Sign Up </h2>\n        </Grid>\n\n        <Formik initialValues={{ email: \"\", password: '', firstname: \"\", lastname: '' }} onSubmit={submit}>\n          {(props) => (\n            <Form>\n              {!phoneVerified ? (\n                <>\n                  <Field  as={TextField} label=\"Phone Number\" name=\"Phone Number\" placeholder=\"Example +251918224567\" type=\"phonenumber\" fullWidth required variant=\"standard\" style={{ backgroundColor: \"#f7f7f7\", marginTop: \"10px\", marginBottom: \"10px\" }} onChange={(event) => { setPhoneNumber(event.target.value) }} />\n                  <p> Your phone number is required for verification purposes. We will be sending you verification code </p>\n                  <Button id=\"sign-in-button\" onClick={onPhoneSignInSubmit} > Continue </Button>\n                </>\n              ) :\n                <>\n                  <Field as={TextField}  label=\"Firstname\" name=\"firstname\" placeholder=\"Enter first name\" fullWidth required variant=\"standard\" style={{ backgroundColor: \"#f7f7f7\", marginTop: \"10px\", marginBottom: \"10px\" }} />\n                  <Field as={TextField} label=\"Lastname\" name=\"lastname\" placeholder=\"Enter last name\" fullWidth required variant=\"standard\" style={{ backgroundColor: \"#f7f7f7\", marginTop: \"10px\", marginBottom: \"10px\" }} />\n                  <Field as={TextField} label=\"Email\" name=\"email\" placeholder=\"Enter your email\" fullWidth required variant=\"standard\" style={{ backgroundColor: \"#f7f7f7\", marginTop: \"10px\", marginBottom: \"10px\" }} />\n                  <Field as={TextField} label=\"Password\" name=\"password\" placeholder=\"Enter password\" type=\"password\" fullWidth required variant=\"standard\" style={{ backgroundColor: \"#f7f7f7\", marginTop: \"10px\", marginBottom: \"10px\" }} />\n\n                  <Button type=\"submit\" color=\"primary\" fullWidth variant=\"contained\"\n                    style={{ marginTop: \"10px\", marginBottom: \"10px\" }} onClick={submit} >\n                    Sign up\n                  </Button>\n                </>}\n\n\n            </Form>\n          )}\n        </Formik>\n        <Typography>\n          Do you have an account?\n          <NavLink to='/signin'>  <Link href=\"#\" > Sign in </Link>  </NavLink>\n        </Typography>\n\n\n\n\n\n\n      </Paper>\n      {loading?(\n          <Loader/>\n        ):\"\"\n      }\n    </div>\n  )\n\n}\n\nexport default SignUp\n","import React from \"react\";\nimport SignUp from \"../components/SignUp\";\nimport Footer from \"../components/Footer.js\";\nimport HeaderWrapped from \"./HeaderWrapped\";\n\nfunction SignInPage() {\n  return (\n    <div>\n      <HeaderWrapped />\n      <SignUp />\n      <Footer />\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"sourceRoot":""}