{"version":3,"sources":["components/PitchCard.js","components/SearchDateComponent.js","components/PhotoCard.js","components/HomeContent.js","pages/Home.js"],"names":["CardActionsStyled","styled","CardActions","StyledJoinButton","Button","CardContentStyled","CardContent","CardStyled","Card","PitchCard","src","name","description","path","history","useHistory","onClick","push","className","component","height","image","alt","sx","width","color","gutterBottom","variant","TextField","SearchDateComponent","PhotoCard","CardActionArea","CardMedia","Typography","font","ContainerStyled","Container","GridStyled","Grid","HomeContent","theme","useTheme","medium","useMediaQuery","breakpoints","up","SearchBar","style","maxWidth","container","spacing","item","xs","sm","md","lg","Home","HeaderWrapped","showSearchBar","Footer"],"mappings":"+QAaMA,EAAoBC,YAAOC,IAAPD,CAAH,0DAIjBE,EAAmBF,YAAOG,IAAPH,CAAH,+rBAmBhBI,EAAoBJ,YAAOK,IAAPL,CAAH,iIAOjBM,EAAaN,YAAOO,IAAPP,CAAH,oDAkDDQ,IA9CG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACrCC,EAAUC,cAChB,OAEE,eAACR,EAAD,WACE,eAAC,IAAD,CAAgBS,QAAS,kBAAMF,EAAQG,KAAKJ,IAA5C,UACE,cAAC,IAAD,CACEK,UAAU,eACVC,UAAU,MACVC,OAAO,MACPC,MAAOX,EACPY,IAAI,QACJC,GAAI,CAAE,aAAc,QAASC,MAAO,UAEtC,eAACnB,EAAD,WACE,cAAC,IAAD,CACEkB,GAAI,CAAEE,MAAO,SACbC,cAAY,EACZC,QAAQ,KACRR,UAAU,MAJZ,SAMGR,IAEH,cAAC,IAAD,CACEY,GAAI,CAAEE,MAAO,aACbE,QAAQ,QACRF,MAAM,iBAHR,SAKGb,UAIP,cAACZ,EAAD,UACE,cAACG,EAAD,CACEsB,MAAO,UACPE,QAAQ,YACRX,QAAS,kBAAMF,EAAQG,KAAKJ,IAH9B,gC,8MCjEgBZ,YAAO2B,IAAP3B,CAAH,wDAwON4B,I,gEC9OTxB,G,cAAoBJ,YAAOK,IAAPL,CAAH,kIAOjBM,EAAaN,YAAOO,IAAPP,CAAH,oDAiCD6B,EA7BG,SAAC,GAAgC,IAA9BpB,EAA6B,EAA7BA,IAAWE,GAAkB,EAAxBD,KAAwB,EAAlBC,aAC9B,OAEE,cAACL,EAAD,UACE,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEd,UAAU,eACVC,UAAU,MACVC,OAAO,MACPC,MAAOX,EACPY,IAAI,QACJC,GAAI,CAAE,aAAc,QAASC,MAAO,UAEtC,cAACnB,EAAD,UACE,cAAC4B,EAAA,EAAD,CACEV,GAAI,CAAEE,MAAO,UAAWS,KAAM,OAAQ,YAAa,QACnDR,cAAY,EACZC,QAAQ,OACRR,UAAU,MAJZ,SAMGP,Y,4CC3BPuB,EAAkBlC,YAAOmC,IAAPnC,CAAH,2EAKfoC,EAAapC,YAAOqC,IAAPrC,CAAH,gFAKOA,YAAOqC,IAAPrC,CAAH,yEA8FLsC,MAzFf,WACE,IAAMC,EAAQC,cACRC,EAASC,YAAcH,EAAMI,YAAYC,GAAG,OAClD,OACE,sBAAK3B,UAAU,cAAf,WACIwB,GAAU,cAACI,EAAA,EAAD,IACZ,sBAAK5B,UAAU,4BAAf,UACE,oBACE6B,MAAO,CACLtB,MAAO,QACP,YAAa,OACb,aAAc,UAJlB,qCASA,oBAAGsB,MAAO,CAAEtB,MAAO,QAAS,aAAc,MAAO,YAAa,QAA9D,UACG,IADH,kDAKF,yDACA,cAACU,EAAD,CAAiBa,SAAU,KAA3B,SACE,eAACX,EAAD,CAAYY,WAAS,EAACC,QAAS,EAA/B,UACE,cAACZ,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC9C,EAAA,EAAD,CACEC,IAAI,sGACJC,KAAK,OACLC,YAAY,kCAGhB,cAAC0B,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC9C,EAAA,EAAD,CACEC,IAAI,sGACJC,KAAK,cACLC,YAAY,4CAGhB,cAAC0B,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC9C,EAAA,EAAD,CACEC,IAAI,sGACJC,KAAK,cACLC,YAAY,qFAGhB,cAAC0B,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC9C,EAAA,EAAD,CACEC,IAAI,sGACJC,KAAK,cACLC,YAAY,0FAKpB,sBAAKM,UAAU,6BAAf,UACE,iDACA,cAACiB,EAAD,CAAiBa,SAAU,KAA3B,SACE,eAACX,EAAD,CAAYY,WAAS,EAACC,QAAS,EAA/B,UACE,cAACZ,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC,EAAD,CACE7C,IAAI,sGACJE,YAAY,mBAGhB,cAAC0B,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC,EAAD,CACE7C,IAAI,sGACJE,YAAY,yCAGhB,cAAC0B,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC,EAAD,CACE7C,IAAI,sGACJE,YAAY,uCAGhB,cAAC0B,EAAA,EAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC,EAAD,CACE7C,IAAI,sGACJE,YAAY,kD,gBC1Fb4C,UAXf,WACE,OACE,sBAAKtC,UAAU,MAAf,UAEE,cAACuC,EAAA,EAAD,CAAeC,eAAe,IAC9B,cAAC,EAAD,IACA,cAACC,EAAA,EAAD","file":"static/js/12.b0d3f6ff.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport styled from \"@emotion/styled\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../css/Pulse.css\";\nimport LazyLoad from 'react-lazy-load';\n\nconst CardActionsStyled = styled(CardActions)`\n  justify-content: flex-end;\n`;\n\nconst StyledJoinButton = styled(Button)`\n  min-width: 150px;\n  transition: border 280ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  -webkit-box-shadow: 0px 1px 2px 0px rgb(60 64 67 / 30%),\n    0px 1px 3px 1px rgb(60 64 67 / 15%);\n  box-shadow: 0px 1px 2px 0px rgb(60 64 67 / 30%),\n    0px 1px 3px 1px rgb(60 64 67 / 15%);\n  :focus,\n  :hover {\n    transition: border 280ms cubic-bezier(0.4, 0, 0.2, 1),\n      box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-box-shadow: 0px 4px 4px 0px rgb(60 64 67 / 30%),\n      0px 8px 12px 6px rgb(60 64 67 / 15%);\n    box-shadow: 0px 4px 4px 0px rgb(60 64 67 / 30%),\n      0px 8px 12px 6px rgb(60 64 67 / 15%);\n  }\n`;\n\nconst CardContentStyled = styled(CardContent)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst CardStyled = styled(Card)`\n  border-radius: 10px;\n`;\n\nconst PitchCard = ({ src, name, description, path }) => {\n  const history = useHistory();\n  return (\n   \n    <CardStyled>\n      <CardActionArea onClick={() => history.push(path)}>\n        <CardMedia\n          className=\"pitch__image\"\n          component=\"img\"\n          height=\"240\"\n          image={src}\n          alt=\"Pitch\"\n          sx={{ \"object-fit\": \"cover\", width: \"100%\" }}\n        />\n        <CardContentStyled>\n          <Typography\n            sx={{ color: \"black\" }}\n            gutterBottom\n            variant=\"h5\"\n            component=\"div\"\n          >\n            {name}\n          </Typography>\n          <Typography\n            sx={{ color: \"secondary\" }}\n            variant=\"body2\"\n            color=\"text.secondary\"\n          >\n            {description}\n          </Typography>\n        </CardContentStyled>\n      </CardActionArea>\n      <CardActionsStyled>\n        <StyledJoinButton\n          color={\"success\"}\n          variant=\"contained\"\n          onClick={() => history.push(path)}\n        >\n          Join Games!\n        </StyledJoinButton>\n      </CardActionsStyled>\n    </CardStyled>\n    \n  );\n};\n\nexport default PitchCard;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/SearchDateComponent.css\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { useStateValue } from \"../StateProvider\";\nimport TextField from \"@mui/material/TextField\";\nimport { Button, Autocomplete } from \"@mui/material\";\nimport { actionTypes } from \"../reducer\";\nimport styled from \"@emotion/styled\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport momentTimezone from \"moment-timezone\";\n\nconst StyledTextField = styled(TextField)`\n  color: blue !important ;\n`;\n\nfunction SearchDateComponent() {\n  const history = useHistory();\n  const [\n    { homeFields, selectedDate, selectedLocation, pitchSearched },\n    dispatch,\n  ] = useStateValue();\n  const [date, setDate] = useState(selectedDate ? selectedDate : null);\n  console.log(selectedDate);\n  console.log(date);\n  const [location, setLocation] = useState(\"\");\n  const [locationSelected, setLocationSelected] = useState(\n    pitchSearched ? pitchSearched : null\n  );\n  const [address, setAddress] = useState(\"\");\n  const [PitchLocations, setPitchLocations] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { moment } = new DateAdapter({ instance: momentTimezone });\n  // search pitches based on date and location selected\n  const getPitches = () => {\n    if (!date) {\n      alert(\"please select date to search\");\n      return;\n    }\n\n    var url = \"http://localhost:8080/pitch/pitches/\";\n    console.log(locationSelected);\n    const formatedDate = date.format(\"YYYY-MM-DD\");\n    if (locationSelected) {\n      url = \"http://localhost:8080/pitch/pitches/\" + locationSelected.id + \"/\";\n    }\n\n    const dayofweek = {\n      1: \"monday\",\n      2: \"tuesday\",\n      3: \"wednesday\",\n      4: \"thursday\",\n      5: \"friday\",\n      6: \"saturday\",\n      7: \"sunday\",\n    };\n    setLoading(true);\n    // date.isoweekeday returns 1-7 starting from monday\n    fetch(url + dayofweek[date.isoWeekday()], {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      //phone number has to be inserted properly as well on sign up\n    })\n      .then((response) => {\n        if (!response.ok) {\n          // throw the promise to catch and\n          // display message from backend API\n          throw response;\n        } else return response.json();\n      })\n      .then((result) => {\n        if (result.length > 0) {\n          for (let i = 0; i < result.length; i++) {\n            // append this value on results so we can use it on pitch card\n            result[i][\"dateSearched\"] = formatedDate;\n          }\n          dispatch({\n            // for now let me ignore the result here\n            type: actionTypes.SET_HOME_FIELDS,\n            homeFields: {\n              fields: result,\n            },\n          });\n          dispatch({\n            type: actionTypes.SET_SELECTED_DATE,\n            selectedDate: date,\n          });\n          dispatch({\n            type: actionTypes.SET_PITCH_SEARCHED,\n            pitchSearched: locationSelected,\n          });\n        } else {\n          dispatch({\n            // else dispatch so no field are shown\n            type: actionTypes.SET_HOME_FIELDS,\n            homeFields: null,\n          });\n          dispatch({\n            type: actionTypes.SET_SELECTED_DATE,\n            selectedDate: date,\n          });\n          dispatch({\n            type: actionTypes.SET_PITCH_SEARCHED,\n            pitchSearched: locationSelected,\n          });\n        }\n        setLoading(false);\n        history.push(\"/search_results\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        // error can come from rejected Promise fetch api error or from backend API\n        // console.log(error.status)\n        alert(\n          \"Sorry, Some server error happened while fetching pitches for the selected date and location!\"\n        );\n        // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n        if (typeof error.json === \"function\") {\n          error\n            .json()\n            .then((error) => {\n              //console.log(\"An API error from backend API while fetching pitch options for userid XXX\");\n            })\n            .catch((genericError) => {\n              //console.log(\"Another error \");\n            });\n        } else {\n          // error status undefined here\n          //console.log(\"some sort of fetch error happended\")\n        }\n      });\n  };\n\n  // useEffect - run on first render fetch pitch options first\n  useEffect(() => {\n    fetch(\"http://localhost:8080/pitch/pitches/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          // throw the promise to catch and\n          // display message from backend API\n          throw response;\n        } else return response.json();\n      })\n      .then((result) => {\n        if (result.length > 0) {\n          const pitches = [];\n          for (let i = 0; i < result.length; i++) {\n            pitches.push({\n              label: result[i].description + \" in \" + result[i].address + \" \",\n              id: result[i].id,\n            });\n          }\n          //pitches.push(...PitchLocations)\n          setPitchLocations(pitches);\n        } else {\n          // no pitch to show so maybe alert? maybe not (just no pitch in the db yet)\n          console.log(\"no pitch to show on the drop down\");\n        }\n      })\n      .catch((error) => {\n        // error can come from rejected Promise fetch api error or from backend API\n        // console.log(error.status)\n        alert(\n          \"Sorry, Some server error happended while fetching pitch options. you might be unable to choose pitches\"\n        );\n        // if error comes from backend API - we can grab the mesage here or send it to logger in the future\n        if (typeof error.json === \"function\") {\n          error\n            .json()\n            .then((error) => {\n              //console.log(\"An API error from backend API while fetching pitches option for userid XXX\");\n            })\n            .catch((genericError) => {\n              //console.log(\"Another error \");\n            });\n        } else {\n          // error status undefined here\n          //console.log(\"some sort of fetch error happended\")\n        }\n      });\n  }, []);\n\n  return (\n    <div className=\"searchComponents\">\n      <div className=\"search\">\n        <div className=\"search__location\">\n          {/*<input type=\"text\" placeholder={selectedLocation?selectedLocation:\"Select Location\"} onChange={(event) => {\n                                setLocation(event.target.value)\n                            }} value={location}   />*/}\n          <Autocomplete\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            disablePortal\n            id=\"combo-box-demo\"\n            options={PitchLocations}\n            value={locationSelected ? locationSelected : pitchSearched}\n            onChange={(event, newValue) => {\n              setLocationSelected(newValue);\n            }}\n            className=\"search__location__textField\"\n            renderInput={(params) => (\n              <TextField variant=\"standard\" {...params} label=\"Pitches\" />\n            )}\n          />\n        </div>\n        <div className=\"search__dateRange\">\n          <LocalizationProvider\n            dateAdapter={DateAdapter}\n            className=\"LocalizationProvider\"\n          >\n            <DatePicker\n              label=\"Date\"\n              minDate={moment(new Date().getDate(), \"DD/MM/YYYY\")}\n              className=\"search__dateRange__textField\"\n              value={date ? date : selectedDate}\n              onChange={(value) => {\n                setDate(value);\n              }}\n              renderInput={(params) => (\n                <TextField\n                  variant=\"standard\"\n                  className=\"search__dateRange__textField\"\n                  {...params}\n                />\n              )}\n            />\n          </LocalizationProvider>\n        </div>\n      </div>\n      <Button onClick={getPitches} style={{ color: \"white\" }}>\n        Search\n      </Button>\n      {loading && <Loader />}\n    </div>\n  );\n}\n\nexport default SearchDateComponent;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport styled from \"@emotion/styled\";\nimport \"../css/Pulse.css\";\nimport LazyLoad from 'react-lazy-load';\nconst CardContentStyled = styled(CardContent)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst CardStyled = styled(Card)`\n  border-radius: 10px;\n`;\n\nconst PhotoCard = ({ src, name, description }) => {\n  return (\n   \n    <CardStyled>\n      <CardActionArea>\n        <CardMedia\n          className=\"pitch__image\"\n          component=\"img\"\n          height=\"150\"\n          image={src}\n          alt=\"Pitch\"\n          sx={{ \"object-fit\": \"cover\", width: \"100%\" }}\n        />\n        <CardContentStyled>\n          <Typography\n            sx={{ color: \"primary\", font: \"bold\", \"font-size\": \"15px\" }}\n            gutterBottom\n            variant=\"body\"\n            component=\"div\"\n          >\n            {description}\n          </Typography>\n        </CardContentStyled>\n      </CardActionArea>\n    </CardStyled>\n   \n  );\n};\n\nexport default PhotoCard;\n","import React, { useState } from \"react\";\nimport \"../css/HomeContent.css\";\nimport SearchDateComponent from \"./SearchDateComponent\";\nimport { useStateValue } from \"../StateProvider\";\nimport TextField from \"@mui/material/TextField\";\nimport PitchCard from \"./PitchCard\";\nimport PhotoCard from \"./PhotoCard\";\nimport { Container, Grid, IconButton } from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport { useHistory, Link as NavLink } from \"react-router-dom\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport SearchBar from \"./search/SearchBar\";\nconst ContainerStyled = styled(Container)`\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nconst GridStyled = styled(Grid)`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst GridStyledItem = styled(Grid)`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction HomeContent() {\n  const theme = useTheme();\n  const medium = useMediaQuery(theme.breakpoints.up(\"md\"));\n  return (\n    <div className=\"homeSection\">\n      {!medium && <SearchBar />}\n      <div className=\"homeSection__landingImage\">\n        <h1\n          style={{\n            color: \"white\",\n            \"font-size\": \"90px\",\n            \"margin-top\": \"-100px\",\n          }}\n        >\n          Stay Active and Healthy\n        </h1>\n        <p style={{ color: \"white\", \"margin-top\": \"8px\", \"font-size\": \"30px\" }}>\n          {\" \"}\n          Are you ready to play the beautiful game?\n        </p>\n      </div>\n      <h1>Featured Gaming Grounds</h1>\n      <ContainerStyled maxWidth={\"xl\"}>\n        <GridStyled container spacing={3}>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <PitchCard\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSgvoeyX-SFdedVUkb8HK8G68JHzR2m4S3Eg&usqp=CAU\"\n              name=\"Bole\"\n              description=\"A nice futsal Pitch in Bole\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <PitchCard\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbLkhs7L1GXLLhxwGJsQJDVRuUbeZnvQt4BQ&usqp=CAU\"\n              name=\"A.A Stadium\"\n              description=\"Football field in Addis Ababa Stadium\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <PitchCard\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbLkhs7L1GXLLhxwGJsQJDVRuUbeZnvQt4BQ&usqp=CAU\"\n              name=\"A.A Stadium\"\n              description=\"Football field  some lvery long text is in here lets seein Addis Ababa Stadium\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <PitchCard\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbLkhs7L1GXLLhxwGJsQJDVRuUbeZnvQt4BQ&usqp=CAU\"\n              name=\"A.A Stadium\"\n              description=\"Football field  some lvery long text is in here lets seein Addis Ababa Stadium\"\n            />\n          </Grid>\n        </GridStyled>\n      </ContainerStyled>\n      <div className=\"homeSection__photoGalaries\">\n        <h1>Photo Galleries</h1>\n        <ContainerStyled maxWidth={\"xl\"}>\n          <GridStyled container spacing={3}>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <PhotoCard\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTO8y5KaqAOsMLe1tUI5B4tbm1CAt2oxIeQuA&usqp=CAU\"\n                description=\"Ball is life\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <PhotoCard\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRiHvK_-J0E3jlriXMITj9SzZB0_Tjh2_xGwA&usqp=CAU\"\n                description=\"Boys playing Futsal in the morning\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <PhotoCard\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgKOOscz3tBcFRcf33OxaC654dQ-kfZlvkeQ&usqp=CAU\"\n                description=\"Play the beautiful game anywhere\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <PhotoCard\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSRU0Kxz1urO4U-2j7D6mExyb0pyBT4L_a7NQ&usqp=CAU\"\n                description=\"Play the beautiful game anytime\"\n              />\n            </Grid>\n          </GridStyled>\n        </ContainerStyled>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeContent;\n","import \"../css/App.css\";\nimport React from \"react\";\nimport HomeContent from \"../components/HomeContent.js\";\nimport Footer from \"../components/Footer.js\";\nimport HeaderWrapped from \"./HeaderWrapped\";\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      {/*<Header showSearchComponent={false} />*/}\n      <HeaderWrapped showSearchBar={true} />\n      <HomeContent />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}